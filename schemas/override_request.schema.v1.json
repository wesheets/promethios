{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Override Request Schema",
  "description": "Schema for requesting an override for a governance decision",
  "type": "object",
  "required": ["request_id", "agent_id", "task_id", "action", "reason", "timestamp"],
  "properties": {
    "request_id": {
      "type": "string",
      "description": "Unique identifier for the override request",
      "pattern": "^OR-[0-9]{6}$"
    },
    "agent_id": {
      "type": "string",
      "description": "ID of the agent requesting the override",
      "pattern": "^A-[0-9]{4}$"
    },
    "task_id": {
      "type": "string",
      "description": "ID of the task for which the override is requested",
      "pattern": "^T-[0-9]{6}$"
    },
    "action": {
      "type": "string",
      "description": "Action that requires override",
      "enum": ["write", "read", "execute", "access", "modify", "delete", "create", "other"]
    },
    "reason": {
      "type": "string",
      "description": "Reason for the override request",
      "enum": ["policy", "trust", "safety", "emergency", "compliance", "other"]
    },
    "details": {
      "type": "string",
      "description": "Detailed explanation for the override request",
      "minLength": 10
    },
    "timestamp": {
      "type": "string",
      "description": "Timestamp of the override request",
      "format": "date-time"
    },
    "priority": {
      "type": "string",
      "description": "Priority of the override request",
      "enum": ["low", "medium", "high", "critical"],
      "default": "medium"
    },
    "expiration": {
      "type": "string",
      "description": "Expiration time for the override request",
      "format": "date-time"
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata for the override request",
      "properties": {
        "source_ip": {
          "type": "string",
          "format": "ipv4"
        },
        "user_id": {
          "type": "string"
        },
        "session_id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
