{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Module Extension Schema",
  "description": "Schema for governance module extensions in the Promethios system",
  "type": "object",
  "required": [
    "extension_id",
    "version",
    "name",
    "description",
    "author",
    "created_at",
    "extension_type",
    "entry_points",
    "dependencies",
    "governance_principles",
    "trust_boundaries"
  ],
  "properties": {
    "extension_id": {
      "type": "string",
      "description": "Unique identifier for the extension",
      "pattern": "^[a-z0-9_]+(\\.[a-z0-9_]+)*$"
    },
    "version": {
      "type": "string",
      "description": "Semantic version of the extension",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "name": {
      "type": "string",
      "description": "Human-readable name of the extension",
      "minLength": 3,
      "maxLength": 100
    },
    "description": {
      "type": "string",
      "description": "Detailed description of the extension's purpose and functionality",
      "minLength": 10,
      "maxLength": 1000
    },
    "author": {
      "type": "string",
      "description": "Author or organization that created the extension",
      "minLength": 3,
      "maxLength": 100
    },
    "created_at": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the extension was created",
      "format": "date-time"
    },
    "updated_at": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the extension was last updated",
      "format": "date-time"
    },
    "extension_type": {
      "type": "string",
      "description": "Type of governance extension",
      "enum": [
        "primitive",
        "decision_model",
        "policy_type",
        "validation_rule",
        "attestation_method",
        "trust_metric",
        "visualization",
        "integration",
        "utility"
      ]
    },
    "entry_points": {
      "type": "array",
      "description": "List of entry points provided by the extension",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "name",
          "interface",
          "implementation_path"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the entry point",
            "pattern": "^[a-z0-9_]+$"
          },
          "interface": {
            "type": "string",
            "description": "Interface implemented by the entry point",
            "pattern": "^[A-Za-z0-9_]+(\\.[A-Za-z0-9_]+)*$"
          },
          "implementation_path": {
            "type": "string",
            "description": "Path to the implementation file",
            "pattern": "^[a-zA-Z0-9_/\\.]+\\.py$"
          },
          "description": {
            "type": "string",
            "description": "Description of the entry point's purpose",
            "maxLength": 500
          }
        }
      }
    },
    "dependencies": {
      "type": "array",
      "description": "List of dependencies required by the extension",
      "items": {
        "type": "object",
        "required": [
          "extension_id",
          "version_constraint"
        ],
        "properties": {
          "extension_id": {
            "type": "string",
            "description": "ID of the required extension",
            "pattern": "^[a-z0-9_]+(\\.[a-z0-9_]+)*$"
          },
          "version_constraint": {
            "type": "string",
            "description": "Semantic version constraint",
            "pattern": "^([<>=~^]|<=|>=)?\\d+\\.\\d+\\.\\d+$"
          },
          "optional": {
            "type": "boolean",
            "description": "Whether this dependency is optional",
            "default": false
          }
        }
      }
    },
    "governance_principles": {
      "type": "array",
      "description": "Governance principles adhered to by the extension",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "principle_id",
          "adherence_level"
        ],
        "properties": {
          "principle_id": {
            "type": "string",
            "description": "ID of the governance principle",
            "pattern": "^[A-Z0-9_]+$"
          },
          "adherence_level": {
            "type": "string",
            "description": "Level of adherence to the principle",
            "enum": [
              "full",
              "partial",
              "minimal",
              "not_applicable"
            ]
          },
          "justification": {
            "type": "string",
            "description": "Justification for the adherence level",
            "maxLength": 500
          }
        }
      }
    },
    "trust_boundaries": {
      "type": "array",
      "description": "Trust boundaries affected by the extension",
      "items": {
        "type": "object",
        "required": [
          "boundary_id",
          "access_level"
        ],
        "properties": {
          "boundary_id": {
            "type": "string",
            "description": "ID of the trust boundary",
            "pattern": "^[A-Z0-9_]+$"
          },
          "access_level": {
            "type": "string",
            "description": "Level of access to the boundary",
            "enum": [
              "read",
              "write",
              "modify",
              "create",
              "delete",
              "execute"
            ]
          },
          "justification": {
            "type": "string",
            "description": "Justification for the access level",
            "maxLength": 500
          }
        }
      }
    },
    "attestations": {
      "type": "array",
      "description": "Attestations provided for the extension",
      "items": {
        "type": "object",
        "required": [
          "authority_id",
          "attestation_id",
          "timestamp",
          "signature"
        ],
        "properties": {
          "authority_id": {
            "type": "string",
            "description": "ID of the attestation authority",
            "pattern": "^[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*$"
          },
          "attestation_id": {
            "type": "string",
            "description": "Unique ID of the attestation",
            "pattern": "^[a-zA-Z0-9_\\-]+$"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO 8601 timestamp of when the attestation was created",
            "format": "date-time"
          },
          "signature": {
            "type": "string",
            "description": "Cryptographic signature of the attestation",
            "pattern": "^[a-zA-Z0-9+/=]+$"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata for the attestation"
          }
        }
      }
    },
    "configuration_schema": {
      "type": "object",
      "description": "JSON Schema for the extension's configuration"
    },
    "tags": {
      "type": "array",
      "description": "Tags associated with the extension",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9_\\-]+$"
      }
    },
    "documentation_url": {
      "type": "string",
      "description": "URL to the extension's documentation",
      "format": "uri"
    },
    "license": {
      "type": "string",
      "description": "License under which the extension is distributed",
      "maxLength": 100
    },
    "codex_contract_version": {
      "type": "string",
      "description": "Version of the Codex contract this extension adheres to",
      "pattern": "^v\\d{4}\\.\\d{2}\\.\\d{2}$"
    }
  },
  "additionalProperties": false
}
