{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Governance Policy Schema",
  "description": "Schema for governance policies in the Minimal Viable Governance framework",
  "type": "object",
  "required": [
    "policy_id",
    "version",
    "name",
    "description",
    "category",
    "status",
    "created_at",
    "updated_at",
    "rules",
    "metadata"
  ],
  "properties": {
    "policy_id": {
      "type": "string",
      "description": "Unique identifier for the governance policy",
      "pattern": "^[a-zA-Z0-9_.-]+$"
    },
    "version": {
      "type": "string",
      "description": "Version of the governance policy",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "name": {
      "type": "string",
      "description": "Human-readable name of the governance policy",
      "minLength": 1,
      "maxLength": 100
    },
    "description": {
      "type": "string",
      "description": "Detailed description of the governance policy",
      "minLength": 1,
      "maxLength": 1000
    },
    "category": {
      "type": "string",
      "description": "Category of the governance policy",
      "enum": [
        "SECURITY",
        "COMPLIANCE",
        "OPERATIONAL",
        "ETHICAL",
        "TECHNICAL",
        "ORGANIZATIONAL",
        "LEGAL",
        "FINANCIAL",
        "SOCIAL",
        "ENVIRONMENTAL"
      ]
    },
    "status": {
      "type": "string",
      "description": "Current status of the governance policy",
      "enum": [
        "DRAFT",
        "PROPOSED",
        "ACTIVE",
        "DEPRECATED",
        "ARCHIVED"
      ]
    },
    "created_at": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the policy was created",
      "format": "date-time"
    },
    "updated_at": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the policy was last updated",
      "format": "date-time"
    },
    "effective_from": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the policy becomes effective",
      "format": "date-time"
    },
    "effective_until": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the policy expires",
      "format": "date-time"
    },
    "scope": {
      "type": "object",
      "description": "Scope of the policy application",
      "properties": {
        "applies_to": {
          "type": "array",
          "description": "Entities to which the policy applies",
          "items": {
            "type": "object",
            "required": [
              "entity_type",
              "entity_id_pattern"
            ],
            "properties": {
              "entity_type": {
                "type": "string",
                "description": "Type of entity",
                "enum": [
                  "SYSTEM",
                  "COMPONENT",
                  "USER",
                  "ROLE",
                  "PROCESS",
                  "DATA",
                  "DECISION",
                  "PRIMITIVE",
                  "ALL"
                ]
              },
              "entity_id_pattern": {
                "type": "string",
                "description": "Pattern for matching entity IDs (regex)",
                "maxLength": 200
              },
              "conditions": {
                "type": "object",
                "description": "Additional conditions for application"
              }
            }
          }
        },
        "excludes": {
          "type": "array",
          "description": "Entities explicitly excluded from the policy",
          "items": {
            "type": "object",
            "required": [
              "entity_type",
              "entity_id_pattern"
            ],
            "properties": {
              "entity_type": {
                "type": "string",
                "description": "Type of entity",
                "enum": [
                  "SYSTEM",
                  "COMPONENT",
                  "USER",
                  "ROLE",
                  "PROCESS",
                  "DATA",
                  "DECISION",
                  "PRIMITIVE"
                ]
              },
              "entity_id_pattern": {
                "type": "string",
                "description": "Pattern for matching entity IDs (regex)",
                "maxLength": 200
              },
              "reason": {
                "type": "string",
                "description": "Reason for exclusion",
                "maxLength": 500
              }
            }
          }
        },
        "jurisdictions": {
          "type": "array",
          "description": "Jurisdictions where the policy applies",
          "items": {
            "type": "string",
            "maxLength": 100
          }
        }
      }
    },
    "rules": {
      "type": "array",
      "description": "Rules that make up the policy",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "rule_id",
          "description",
          "rule_type",
          "rule_definition"
        ],
        "properties": {
          "rule_id": {
            "type": "string",
            "description": "Unique identifier for the rule",
            "pattern": "^[a-zA-Z0-9_.-]+$"
          },
          "description": {
            "type": "string",
            "description": "Description of the rule",
            "maxLength": 500
          },
          "rule_type": {
            "type": "string",
            "description": "Type of rule",
            "enum": [
              "PERMISSION",
              "PROHIBITION",
              "OBLIGATION",
              "RECOMMENDATION",
              "DELEGATION",
              "CONSTRAINT",
              "EXCEPTION"
            ]
          },
          "rule_definition": {
            "type": "object",
            "description": "Definition of the rule",
            "required": [
              "condition",
              "action"
            ],
            "properties": {
              "condition": {
                "type": "object",
                "description": "Condition under which the rule applies"
              },
              "action": {
                "type": "object",
                "description": "Action to take when the condition is met"
              },
              "exceptions": {
                "type": "array",
                "description": "Exceptions to the rule",
                "items": {
                  "type": "object",
                  "properties": {
                    "exception_id": {
                      "type": "string",
                      "description": "ID of the exception",
                      "pattern": "^[a-zA-Z0-9_.-]+$"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the exception",
                      "maxLength": 500
                    },
                    "condition": {
                      "type": "object",
                      "description": "Condition under which the exception applies"
                    }
                  }
                }
              }
            }
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the rule (lower is higher priority)",
            "minimum": 1,
            "maximum": 100
          },
          "severity": {
            "type": "string",
            "description": "Severity of rule violation",
            "enum": [
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ]
          }
        }
      }
    },
    "dependencies": {
      "type": "array",
      "description": "Other policies this policy depends on",
      "items": {
        "type": "object",
        "required": [
          "policy_id",
          "version",
          "relationship_type"
        ],
        "properties": {
          "policy_id": {
            "type": "string",
            "description": "ID of the dependency policy",
            "pattern": "^[a-zA-Z0-9_.-]+$"
          },
          "version": {
            "type": "string",
            "description": "Version of the dependency policy",
            "pattern": "^\\d+\\.\\d+\\.\\d+$"
          },
          "relationship_type": {
            "type": "string",
            "description": "Type of dependency relationship",
            "enum": [
              "REQUIRES",
              "EXTENDS",
              "CONFLICTS_WITH",
              "OVERRIDES",
              "REFERENCES"
            ]
          },
          "notes": {
            "type": "string",
            "description": "Additional notes about the dependency",
            "maxLength": 500
          }
        }
      }
    },
    "conflict_resolution": {
      "type": "object",
      "description": "Rules for resolving conflicts with other policies",
      "properties": {
        "resolution_strategy": {
          "type": "string",
          "description": "Strategy for resolving conflicts",
          "enum": [
            "PRIORITY_BASED",
            "MOST_RESTRICTIVE",
            "LEAST_RESTRICTIVE",
            "MOST_RECENT",
            "EXPLICIT_OVERRIDE",
            "ESCALATE"
          ]
        },
        "priority": {
          "type": "integer",
          "description": "Priority of this policy for conflict resolution (lower is higher priority)",
          "minimum": 1,
          "maximum": 100
        },
        "override_rules": {
          "type": "array",
          "description": "Rules for overriding specific policies",
          "items": {
            "type": "object",
            "required": [
              "policy_id",
              "condition"
            ],
            "properties": {
              "policy_id": {
                "type": "string",
                "description": "ID of the policy to override",
                "pattern": "^[a-zA-Z0-9_.-]+$"
              },
              "condition": {
                "type": "object",
                "description": "Condition under which the override applies"
              },
              "reason": {
                "type": "string",
                "description": "Reason for the override",
                "maxLength": 500
              }
            }
          }
        }
      }
    },
    "attestation_requirements": {
      "type": "object",
      "description": "Requirements for attesting to the policy",
      "properties": {
        "required_authorities": {
          "type": "array",
          "description": "Authorities required for attestation",
          "items": {
            "type": "string",
            "description": "Authority ID",
            "pattern": "^[a-zA-Z0-9_.-]+$"
          }
        },
        "minimum_trust_level": {
          "type": "string",
          "description": "Minimum trust level required for attestation",
          "enum": [
            "NONE",
            "LOW",
            "MEDIUM",
            "HIGH",
            "MAXIMUM"
          ]
        },
        "attestation_frequency": {
          "type": "string",
          "description": "How often attestation is required",
          "enum": [
            "ONCE",
            "DAILY",
            "WEEKLY",
            "MONTHLY",
            "QUARTERLY",
            "ANNUALLY",
            "ON_CHANGE"
          ]
        },
        "attestation_expiry": {
          "type": "string",
          "description": "ISO 8601 duration for attestation expiry",
          "pattern": "^P(?:\\d+Y)?(?:\\d+M)?(?:\\d+W)?(?:\\d+D)?(?:T(?:\\d+H)?(?:\\d+M)?(?:\\d+S)?)?$"
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata for the policy",
      "properties": {
        "tags": {
          "type": "array",
          "description": "Tags for categorizing the policy",
          "items": {
            "type": "string",
            "maxLength": 50
          }
        },
        "owner": {
          "type": "string",
          "description": "Owner of the policy",
          "maxLength": 100
        },
        "source": {
          "type": "string",
          "description": "Source of the policy",
          "maxLength": 200
        },
        "references": {
          "type": "array",
          "description": "References for the policy",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the reference",
                "maxLength": 200
              },
              "url": {
                "type": "string",
                "description": "URL of the reference",
                "format": "uri",
                "maxLength": 500
              },
              "description": {
                "type": "string",
                "description": "Description of the reference",
                "maxLength": 500
              }
            }
          }
        },
        "custom_properties": {
          "type": "object",
          "description": "Custom properties for the policy"
        }
      }
    },
    "codex_contract": {
      "type": "object",
      "description": "Codex contract information for the policy",
      "required": [
        "contract_id",
        "contract_version",
        "tether_check_hash"
      ],
      "properties": {
        "contract_id": {
          "type": "string",
          "description": "ID of the Codex contract",
          "pattern": "^[a-zA-Z0-9_.-]+$"
        },
        "contract_version": {
          "type": "string",
          "description": "Version of the Codex contract",
          "pattern": "^v\\d{4}\\.\\d{2}\\.\\d{2}$"
        },
        "tether_check_hash": {
          "type": "string",
          "description": "Hash of the pre-loop tether check",
          "pattern": "^[a-fA-F0-9]{64}$"
        },
        "last_verified": {
          "type": "string",
          "description": "ISO 8601 timestamp of when the contract was last verified",
          "format": "date-time"
        }
      }
    }
  }
}
