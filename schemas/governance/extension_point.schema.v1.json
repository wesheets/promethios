{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Extension Point Schema",
  "description": "Schema for extension points in the governance system",
  "type": "object",
  "required": [
    "extension_point_id",
    "version",
    "name",
    "description",
    "interface_definition",
    "security_constraints",
    "created_at"
  ],
  "properties": {
    "extension_point_id": {
      "type": "string",
      "description": "Unique identifier for the extension point",
      "pattern": "^[a-z0-9_]+(\\.[a-z0-9_]+)*$"
    },
    "version": {
      "type": "string",
      "description": "Semantic version of the extension point",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "name": {
      "type": "string",
      "description": "Human-readable name of the extension point",
      "minLength": 3,
      "maxLength": 100
    },
    "description": {
      "type": "string",
      "description": "Detailed description of the extension point's purpose and functionality",
      "minLength": 10,
      "maxLength": 1000
    },
    "interface_definition": {
      "type": "object",
      "description": "Definition of the interface that extensions must implement",
      "required": [
        "methods",
        "required_methods"
      ],
      "properties": {
        "methods": {
          "type": "array",
          "description": "Methods defined by the interface",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": [
              "name",
              "parameters",
              "return_type"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the method",
                "pattern": "^[a-z][a-z0-9_]*$"
              },
              "parameters": {
                "type": "array",
                "description": "Parameters for the method",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the parameter",
                      "pattern": "^[a-z][a-z0-9_]*$"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the parameter"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the parameter"
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Whether the parameter is required",
                      "default": true
                    },
                    "default_value": {
                      "description": "Default value for the parameter if not required"
                    },
                    "constraints": {
                      "type": "array",
                      "description": "Constraints on the parameter value",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "return_type": {
                "type": "string",
                "description": "Return type of the method"
              },
              "description": {
                "type": "string",
                "description": "Description of the method"
              },
              "exceptions": {
                "type": "array",
                "description": "Exceptions that can be thrown by the method",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "description"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the exception"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of when the exception is thrown"
                    }
                  }
                }
              }
            }
          }
        },
        "required_methods": {
          "type": "array",
          "description": "Methods that must be implemented by extensions",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "array",
          "description": "Properties defined by the interface",
          "items": {
            "type": "object",
            "required": [
              "name",
              "type"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the property",
                "pattern": "^[a-z][a-z0-9_]*$"
              },
              "type": {
                "type": "string",
                "description": "Type of the property"
              },
              "description": {
                "type": "string",
                "description": "Description of the property"
              },
              "required": {
                "type": "boolean",
                "description": "Whether the property is required",
                "default": true
              },
              "default_value": {
                "description": "Default value for the property if not required"
              },
              "constraints": {
                "type": "array",
                "description": "Constraints on the property value",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "events": {
          "type": "array",
          "description": "Events defined by the interface",
          "items": {
            "type": "object",
            "required": [
              "name",
              "parameters"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the event",
                "pattern": "^[a-z][a-z0-9_]*$"
              },
              "parameters": {
                "type": "array",
                "description": "Parameters for the event",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the parameter",
                      "pattern": "^[a-z][a-z0-9_]*$"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the parameter"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the parameter"
                    }
                  }
                }
              },
              "description": {
                "type": "string",
                "description": "Description of the event"
              }
            }
          }
        }
      }
    },
    "security_constraints": {
      "type": "object",
      "description": "Security constraints for the extension point",
      "required": [
        "trust_level",
        "permissions"
      ],
      "properties": {
        "trust_level": {
          "type": "string",
          "description": "Required trust level for extensions",
          "enum": [
            "system",
            "trusted",
            "verified",
            "standard",
            "restricted"
          ]
        },
        "permissions": {
          "type": "array",
          "description": "Permissions required by extensions",
          "items": {
            "type": "string"
          }
        },
        "attestation_requirements": {
          "type": "array",
          "description": "Attestation requirements for extensions",
          "items": {
            "type": "object",
            "required": [
              "authority_type",
              "level"
            ],
            "properties": {
              "authority_type": {
                "type": "string",
                "description": "Type of attestation authority required"
              },
              "level": {
                "type": "string",
                "description": "Level of attestation required",
                "enum": [
                  "basic",
                  "standard",
                  "enhanced",
                  "critical"
                ]
              },
              "description": {
                "type": "string",
                "description": "Description of the attestation requirement"
              }
            }
          }
        },
        "isolation_level": {
          "type": "string",
          "description": "Level of isolation required for extensions",
          "enum": [
            "none",
            "process",
            "container",
            "vm"
          ]
        },
        "audit_requirements": {
          "type": "array",
          "description": "Audit requirements for extensions",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "created_at": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the extension point was created",
      "format": "date-time"
    },
    "updated_at": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the extension point was last updated",
      "format": "date-time"
    },
    "owner": {
      "type": "string",
      "description": "Owner of the extension point"
    },
    "stability": {
      "type": "string",
      "description": "Stability level of the extension point",
      "enum": [
        "experimental",
        "beta",
        "stable",
        "deprecated"
      ]
    },
    "lifecycle_policy": {
      "type": "object",
      "description": "Lifecycle policy for the extension point",
      "properties": {
        "deprecation_policy": {
          "type": "string",
          "description": "Policy for deprecating the extension point"
        },
        "support_timeline": {
          "type": "object",
          "description": "Timeline for supporting the extension point",
          "properties": {
            "end_of_life": {
              "type": "string",
              "description": "ISO 8601 date of end of life",
              "format": "date"
            },
            "end_of_support": {
              "type": "string",
              "description": "ISO 8601 date of end of support",
              "format": "date"
            }
          }
        },
        "version_compatibility": {
          "type": "array",
          "description": "Version compatibility information",
          "items": {
            "type": "object",
            "required": [
              "version",
              "compatible_with"
            ],
            "properties": {
              "version": {
                "type": "string",
                "description": "Version of the extension point"
              },
              "compatible_with": {
                "type": "array",
                "description": "Versions compatible with this version",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "documentation_url": {
      "type": "string",
      "description": "URL to the extension point's documentation",
      "format": "uri"
    },
    "examples": {
      "type": "array",
      "description": "Examples of using the extension point",
      "items": {
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the example"
          },
          "description": {
            "type": "string",
            "description": "Description of the example"
          },
          "code": {
            "type": "string",
            "description": "Code for the example"
          }
        }
      }
    },
    "codex_contract_version": {
      "type": "string",
      "description": "Version of the Codex contract this extension point adheres to",
      "pattern": "^v\\d{4}\\.\\d{2}\\.\\d{2}$"
    }
  },
  "additionalProperties": false
}
