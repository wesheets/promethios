{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Merkle Seal Schema",
  "description": "Schema for Merkle tree seals used for tamper-evidence in execution logs",
  "type": "object",
  "required": ["seal_id", "root_hash", "timestamp", "contract_version", "phase_id", "conflict_metadata"],
  "properties": {
    "seal_id": {
      "type": "string",
      "description": "Unique identifier for this Merkle seal",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
    },
    "root_hash": {
      "type": "string",
      "description": "Merkle root hash of the sealed log entries",
      "pattern": "^[a-f0-9]{64}$"
    },
    "timestamp": {
      "type": "string",
      "description": "ISO 8601 timestamp of when the seal was created",
      "format": "date-time"
    },
    "contract_version": {
      "type": "string",
      "description": "Version of the Codex contract",
      "pattern": "^v\\d{4}\\.\\d{2}\\.\\d{2}$",
      "const": "v2025.05.18"
    },
    "phase_id": {
      "type": "string",
      "description": "Phase ID of the implementation",
      "pattern": "^\\d+(\\.\\d+)*$",
      "const": "5.3"
    },
    "conflict_metadata": {
      "type": "object",
      "description": "Metadata about conflicts for arbitration preparation",
      "required": ["conflict_type", "agent_ids", "timestamp_hash"],
      "properties": {
        "conflict_type": {
          "type": "string",
          "description": "Type of conflict",
          "enum": ["none", "trust_threshold", "override", "schema_violation", "tether_failure"]
        },
        "agent_ids": {
          "type": "array",
          "description": "IDs of agents involved in the conflict",
          "items": {
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          }
        },
        "timestamp_hash": {
          "type": "string",
          "description": "Hash of the timestamp for verification",
          "pattern": "^[a-f0-9]{64}$"
        },
        "severity": {
          "type": "string",
          "description": "Severity level of the conflict",
          "enum": ["low", "medium", "high", "critical"]
        },
        "resolution_status": {
          "type": "string",
          "description": "Current status of conflict resolution",
          "enum": ["unresolved", "in_progress", "resolved", "escalated"]
        }
      }
    },
    "tree_metadata": {
      "type": "object",
      "description": "Metadata about the Merkle tree structure",
      "required": ["leaf_count", "tree_height", "algorithm"],
      "properties": {
        "leaf_count": {
          "type": "integer",
          "description": "Number of leaf nodes in the Merkle tree",
          "minimum": 1
        },
        "tree_height": {
          "type": "integer",
          "description": "Height of the Merkle tree",
          "minimum": 1
        },
        "algorithm": {
          "type": "string",
          "description": "Hash algorithm used for the Merkle tree",
          "enum": ["sha256"]
        }
      }
    },
    "sealed_entries": {
      "type": "array",
      "description": "References to the log entries that are sealed",
      "items": {
        "type": "object",
        "required": ["entry_id", "entry_hash"],
        "properties": {
          "entry_id": {
            "type": "string",
            "description": "ID of the sealed log entry"
          },
          "entry_hash": {
            "type": "string",
            "description": "Hash of the log entry",
            "pattern": "^[a-f0-9]{64}$"
          }
        }
      }
    },
    "previous_seal_id": {
      "type": "string",
      "description": "ID of the previous Merkle seal in the chain, if any",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
    },
    "codex_clauses": {
      "type": "array",
      "description": "Codex clauses governing this Merkle seal",
      "items": {
        "type": "string",
        "pattern": "^\\d+(\\.\\d+)*$"
      },
      "const": ["5.3", "11.0"]
    }
  }
}
